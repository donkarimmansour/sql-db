"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/users";
exports.ids = ["pages/api/users"];
exports.modules = {

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "(api)/./src/controller/controller.js":
/*!**************************************!*\
  !*** ./src/controller/controller.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteUser\": () => (/* binding */ deleteUser),\n/* harmony export */   \"getCount\": () => (/* binding */ getCount),\n/* harmony export */   \"getUser\": () => (/* binding */ getUser),\n/* harmony export */   \"getUsers\": () => (/* binding */ getUsers),\n/* harmony export */   \"postUser\": () => (/* binding */ postUser),\n/* harmony export */   \"updateUser\": () => (/* binding */ updateUser)\n/* harmony export */ });\n/* harmony import */ var _model_user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/user */ \"(api)/./src/model/user.js\");\n// ðŸŸ¨ðŸŸ¨ðŸŸ¨ ./pages/api/users/index.js <== call these function's ðŸŸ¨ðŸŸ¨ðŸŸ¨\n// router call this controller CURD function's...\n\n// GET : http://localhost:3000/api/users\nasync function getUsers(req, res, key, query, by, limit, skip = 0) {\n    try {\n        let users;\n        if (key && query && query !== \"...\") {\n            if (by === \"one\") {\n                if (key === \"MOBILE\" || key === \"FBID\") {\n                    if (!isNaN(parseInt(query))) {\n                        users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n                            [key]: query\n                        }).skip(skip).limit(limit);\n                    }\n                } else {\n                    users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n                        [key]: {\n                            $regex: query,\n                            $options: \"i\"\n                        }\n                    }).skip(skip).limit(limit);\n                }\n            } else if (by === \"group\") {\n                if (key === \"MOBILE\" || key === \"FBID\") {\n                    const queries = query.split(\",\");\n                    users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n                        [key]: {\n                            $in: queries\n                        }\n                    }).skip(skip).limit(limit);\n                } else {\n                    const queries1 = query.split(\",\").join(\"|\");\n                    users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n                        [key]: {\n                            $regex: queries1,\n                            $options: \"i\"\n                        }\n                    }).skip(skip).limit(limit);\n                }\n            }\n        } else {\n            users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({}).skip(skip).limit(limit);\n        }\n        if (!users) return res.status(404).json({\n            error: \"Data not found.\"\n        });\n        // send users data into frontend...\n        res.status(200).json(users);\n    } catch (error) {\n        console.log(error);\n        res.status(404).json({\n            error: \"Error while data fetching...\"\n        });\n    }\n}\n// GET : http://localhost:3000/api/users/ID\n// ID ==> come from query parameter\nasync function getUser(req, res) {\n    try {\n        const { userID  } = req.query;\n        console.log(userID);\n        if (userID) {\n            // get single user data from backend database...\n            const singleUser = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findById(userID);\n            return res.status(200).json(singleUser);\n        }\n        return res.status(404).json({\n            error: \"User id not selected.\"\n        });\n    } catch (error) {\n        res.status(404).json({\n            error: \"Can not get user...\"\n        });\n    }\n}\n// GET : http://localhost:3000/api/count\nasync function getCount(req, res, key, query, by) {\n    try {\n        let users;\n        if (key && query && query !== \"...\") {\n            if (by === \"one\") {\n                if (key === \"MOBILE\" || key === \"FBID\") {\n                    if (!isNaN(parseInt(query))) {\n                        users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].count({\n                            [key]: query\n                        });\n                    }\n                } else {\n                    users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].count({\n                        [key]: {\n                            $regex: query,\n                            $options: \"i\"\n                        }\n                    });\n                }\n            } else if (by === \"group\") {\n                if (key === \"MOBILE\" || key === \"FBID\") {\n                    const queries = query.split(\",\");\n                    users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].count({\n                        [key]: {\n                            $in: queries\n                        }\n                    });\n                } else {\n                    const queries1 = query.split(\",\").join(\"|\");\n                    users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].count({\n                        [key]: {\n                            $regex: queries1,\n                            $options: \"i\"\n                        }\n                    });\n                }\n            }\n        } else {\n            users = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].count({});\n        }\n        if (!users) return res.status(404).json({\n            error: \"Data not found.\"\n        });\n        res.status(200).json(users);\n    } catch (error) {\n        console.log(error);\n        res.status(404).json({\n            error: \"Error while data fetching...\"\n        });\n    }\n}\n// POST : http://localhost:3000/api/users\nasync function postUser(req, res) {\n    try {\n        const formData = req.body;\n        if (!formData) return res.status(404).json({\n            error: \"Form data not provided.\"\n        });\n        // save users data into backend database...\n        await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(formData, (err, data)=>{\n            return res.status(200).json(data);\n        });\n    } catch (error) {\n        res.status(404).json({\n            error: \"Error while sending data...\"\n        });\n    }\n}\n// PUT : http://localhost:3000/api/users/ID\n// ID ==> come from query parameter\nasync function updateUser(req, res) {\n    try {\n        const { userID  } = req.query;\n        const formData = req.body;\n        if (userID && formData) {\n            // update users data into backend database...\n            const updatedUser = await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByIdAndUpdate(userID, formData, {\n                new: true\n            }).select({\n                __v: 0\n            });\n            return res.status(200).json(updatedUser);\n        }\n        return res.status(404).json({\n            error: \"User not selected.\"\n        });\n    } catch (error) {\n        res.status(404).json({\n            error: \"Error while sending data...\"\n        });\n    }\n}\n// DELETE : http://localhost:3000/api/users/ID\n// ID ==> come from query parameter\nasync function deleteUser(req, res) {\n    try {\n        const { userID  } = req.query;\n        if (userID) {\n            // delete users data from backend database...\n            await _model_user__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByIdAndDelete(userID);\n            return res.status(200).json({\n                deleted: userID\n            });\n        }\n        return res.status(404).json({\n            error: \"User not selected.\"\n        });\n    } catch (error) {\n        res.status(404).json({\n            error: \"Error While Deleting User...\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/controller/controller.js\n");

/***/ }),

/***/ "(api)/./src/data/dbConnection.js":
/*!**********************************!*\
  !*** ./src/data/dbConnection.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst connectMongo = async ()=>{\n    try {\n        const DB_URL = \"mongodb+srv://admin:admin@cluster0.z26mvso.mongodb.net/sql\";\n        const { connection  } = await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(DB_URL, {\n            useNewUrlParser: true\n        });\n        if (connection.readyState == 1) {\n            console.log(\"DataBase Connected... âœ…\");\n        } else {\n            console.log(\"DataBase error... âœ…\");\n        }\n    } catch (error) {\n        return Promise.reject(error);\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectMongo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvZGF0YS9kYkNvbm5lY3Rpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBRWhDLE1BQU1DLFlBQVksR0FBRyxVQUFZO0lBRTdCLElBQUk7UUFDQSxNQUFNQyxNQUFNLEdBQUcsNERBQTREO1FBRTNFLE1BQU0sRUFBRUMsVUFBVSxHQUFFLEdBQUcsTUFBTUgsdURBQWdCLENBQUNFLE1BQU0sRUFBRztZQUFFRyxlQUFlLEVBQUUsSUFBSTtTQUFDLENBQUM7UUFFaEYsSUFBSUYsVUFBVSxDQUFDRyxVQUFVLElBQUksQ0FBQyxFQUFFO1lBQzVCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1NBQzFDLE1BQUk7WUFDQUQsT0FBTyxDQUFDQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztTQUN2QztLQUVKLENBQUMsT0FBT0MsS0FBSyxFQUFFO1FBQ1osT0FBT0MsT0FBTyxDQUFDQyxNQUFNLENBQUNGLEtBQUssQ0FBQyxDQUFDO0tBQ2hDO0NBQ0o7QUFFRCxpRUFBZVIsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1jcnVkLWVtcGxveS8uL3NyYy9kYXRhL2RiQ29ubmVjdGlvbi5qcz81ZWVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuXHJcbmNvbnN0IGNvbm5lY3RNb25nbyA9IGFzeW5jICgpID0+IHtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IERCX1VSTCA9IFwibW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBjbHVzdGVyMC56MjZtdnNvLm1vbmdvZGIubmV0L3NxbFwiXHJcblxyXG4gICAgICAgIGNvbnN0IHsgY29ubmVjdGlvbiB9ID0gYXdhaXQgbW9uZ29vc2UuY29ubmVjdChEQl9VUkwgLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZX0pO1xyXG5cclxuICAgICAgICBpZiAoY29ubmVjdGlvbi5yZWFkeVN0YXRlID09IDEpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFCYXNlIENvbm5lY3RlZC4uLiDinIUnKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEYXRhQmFzZSBlcnJvci4uLiDinIUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgXHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsgXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3RNb25nbzsiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjb25uZWN0TW9uZ28iLCJEQl9VUkwiLCJjb25uZWN0aW9uIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInJlYWR5U3RhdGUiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJQcm9taXNlIiwicmVqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/data/dbConnection.js\n");

/***/ }),

/***/ "(api)/./src/model/user.js":
/*!***************************!*\
  !*** ./src/model/user.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst userSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    FBID: Number,\n    First_NAME: String,\n    Last_NAME: String,\n    GENDER: String,\n    LOCATION: String,\n    HomeTown: String,\n    BIRTHDAY: String,\n    EMAIL: String,\n    MOBILE: Number\n});\nconst Users = mongoose__WEBPACK_IMPORTED_MODULE_0__.models.user || (0,mongoose__WEBPACK_IMPORTED_MODULE_0__.model)(\"user\", userSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Users);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWwvdXNlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFFakQsTUFBTUcsVUFBVSxHQUFHLElBQUlILDRDQUFNLENBQUM7SUFDMUJJLElBQUksRUFBRUMsTUFBTTtJQUNaQyxVQUFVLEVBQUVDLE1BQU07SUFDbEJDLFNBQVMsRUFBRUQsTUFBTTtJQUNqQkUsTUFBTSxFQUFFRixNQUFNO0lBQ2RHLFFBQVEsRUFBRUgsTUFBTTtJQUNoQkksUUFBUSxFQUFFSixNQUFNO0lBQ2hCSyxRQUFRLEVBQUVMLE1BQU07SUFDaEJNLEtBQUssRUFBRU4sTUFBTTtJQUNiTyxNQUFNLEVBQUVULE1BQU07Q0FDakIsQ0FBQztBQUVGLE1BQU1VLEtBQUssR0FBR2QsaURBQVcsSUFBSUMsK0NBQUssQ0FBQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQztBQUV0RCxpRUFBZVksS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1jcnVkLWVtcGxveS8uL3NyYy9tb2RlbC91c2VyLmpzPzdmZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBtb2RlbHMsIG1vZGVsIH0gZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gICAgRkJJRDogTnVtYmVyLFxyXG4gICAgRmlyc3RfTkFNRTogU3RyaW5nLFxyXG4gICAgTGFzdF9OQU1FOiBTdHJpbmcsXHJcbiAgICBHRU5ERVI6IFN0cmluZyxcclxuICAgIExPQ0FUSU9OOiBTdHJpbmcsXHJcbiAgICBIb21lVG93bjogU3RyaW5nLFxyXG4gICAgQklSVEhEQVk6IFN0cmluZyxcclxuICAgIEVNQUlMOiBTdHJpbmcsXHJcbiAgICBNT0JJTEU6IE51bWJlcixcclxufSlcclxuXHJcbmNvbnN0IFVzZXJzID0gbW9kZWxzLnVzZXIgfHwgbW9kZWwoJ3VzZXInLCB1c2VyU2NoZW1hKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVzZXJzO1xyXG5cclxuIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vZGVscyIsIm1vZGVsIiwidXNlclNjaGVtYSIsIkZCSUQiLCJOdW1iZXIiLCJGaXJzdF9OQU1FIiwiU3RyaW5nIiwiTGFzdF9OQU1FIiwiR0VOREVSIiwiTE9DQVRJT04iLCJIb21lVG93biIsIkJJUlRIREFZIiwiRU1BSUwiLCJNT0JJTEUiLCJVc2VycyIsInVzZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/model/user.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/users/index.js":
/*!**************************************!*\
  !*** ./src/pages/api/users/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _controller_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../controller/controller */ \"(api)/./src/controller/controller.js\");\n/* harmony import */ var _data_dbConnection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../data/dbConnection */ \"(api)/./src/data/dbConnection.js\");\n\n\n// this function handle ==> routing + call controller  \nasync function handler(req, res) {\n    const BASE_URL = \"http://localhost:3000\";\n    // MongoDB connection + Error Handel\n    (0,_data_dbConnection__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().catch(()=>res.status(405).json({\n            error: \"Error in the Connection\"\n        }));\n    // type of request ==> ['GET', 'POST', 'PUT', 'DELETE']\n    const { method  } = req;\n    switch(method){\n        case \"GET\":\n            const params = new URL(BASE_URL + req.url).searchParams;\n            const type = params.get(\"type\");\n            if (type === \"get\") {\n                (0,_controller_controller__WEBPACK_IMPORTED_MODULE_0__.getUsers)(req, res, params.get(\"key\"), params.get(\"query\"), params.get(\"by\"), params.get(\"limit\"), params.get(\"skip\"));\n            } else if (type === \"count\") {\n                (0,_controller_controller__WEBPACK_IMPORTED_MODULE_0__.getCount)(req, res, params.get(\"key\"), params.get(\"query\"), params.get(\"by\"));\n            }\n            break;\n        case \"POST\":\n            (0,_controller_controller__WEBPACK_IMPORTED_MODULE_0__.postUser)(req, res);\n            break;\n        case \"PUT\":\n            (0,_controller_controller__WEBPACK_IMPORTED_MODULE_0__.updateUser)(req, res);\n            break;\n        case \"DELETE\":\n            (0,_controller_controller__WEBPACK_IMPORTED_MODULE_0__.deleteUser)(req, res);\n            break;\n        default:\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"POST\",\n                \"PUT\",\n                \"DELETE\"\n            ]);\n            res.status(405).end(`Method ${method} Not Allowed`);\n            break;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3VzZXJzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RztBQUNqRDtBQUd0RCx1REFBdUQ7QUFDeEMsZUFBZU0sT0FBTyxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUU1QyxNQUFNQyxRQUFRLEdBQUcsdUJBQXVCO0lBRXhDLG9DQUFvQztJQUNwQ0osOERBQVksRUFBRSxDQUFDSyxLQUFLLENBQUMsSUFDakJGLEdBQUcsQ0FBQ0csTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7WUFBRUMsS0FBSyxFQUFFLHlCQUF5QjtTQUFFLENBQUMsQ0FDN0QsQ0FBQztJQUVGLHVEQUF1RDtJQUN2RCxNQUFNLEVBQUVDLE1BQU0sR0FBRSxHQUFHUCxHQUFHO0lBRXRCLE9BQVFPLE1BQU07UUFDVixLQUFLLEtBQUs7WUFFTixNQUFNQyxNQUFNLEdBQUcsSUFBSUMsR0FBRyxDQUFDUCxRQUFRLEdBQUdGLEdBQUcsQ0FBQ1UsR0FBRyxDQUFDLENBQUNDLFlBQVk7WUFDdkQsTUFBTUMsSUFBSSxHQUFHSixNQUFNLENBQUNLLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFFL0IsSUFBSUQsSUFBSSxLQUFLLEtBQUssRUFBRTtnQkFDakJsQixnRUFBUSxDQUFDTSxHQUFHLEVBQUVDLEdBQUcsRUFBR08sTUFBTSxDQUFDSyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUlMLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFHTCxNQUFNLENBQUNLLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBR0wsTUFBTSxDQUFDSyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUlMLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQzlILE1BQU0sSUFBSUQsSUFBSSxLQUFLLE9BQU8sRUFBRTtnQkFDMUJmLGdFQUFRLENBQUNHLEdBQUcsRUFBRUMsR0FBRyxFQUFHTyxNQUFNLENBQUNLLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBS0wsTUFBTSxDQUFDSyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUVMLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ2xGO1lBRUQsTUFBTTtRQUNWLEtBQUssTUFBTTtZQUNQbEIsZ0VBQVEsQ0FBQ0ssR0FBRyxFQUFFQyxHQUFHLENBQUMsQ0FBQztZQUNuQixNQUFNO1FBQ1YsS0FBSyxLQUFLO1lBQ05MLGtFQUFVLENBQUNJLEdBQUcsRUFBRUMsR0FBRyxDQUFDLENBQUM7WUFDckIsTUFBTTtRQUNWLEtBQUssUUFBUTtZQUNUUixrRUFBVSxDQUFDTyxHQUFHLEVBQUVDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLE1BQU07UUFDVjtZQUNJQSxHQUFHLENBQUNhLFNBQVMsQ0FBQyxPQUFPLEVBQUU7Z0JBQUMsS0FBSztnQkFBRSxNQUFNO2dCQUFFLEtBQUs7Z0JBQUUsUUFBUTthQUFDLENBQUMsQ0FBQztZQUN6RGIsR0FBRyxDQUFDRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNXLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRVIsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDcEQsTUFBTTtLQUNiO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWNydWQtZW1wbG95Ly4vc3JjL3BhZ2VzL2FwaS91c2Vycy9pbmRleC5qcz9iMGI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlbGV0ZVVzZXIsIGdldFVzZXJzLCBwb3N0VXNlciwgdXBkYXRlVXNlciAsIGdldENvdW50IH0gZnJvbSBcIi4uLy4uLy4uL2NvbnRyb2xsZXIvY29udHJvbGxlclwiO1xyXG5pbXBvcnQgY29ubmVjdE1vbmdvIGZyb20gXCIuLi8uLi8uLi9kYXRhL2RiQ29ubmVjdGlvblwiO1xyXG5cclxuXHJcbi8vIHRoaXMgZnVuY3Rpb24gaGFuZGxlID09PiByb3V0aW5nICsgY2FsbCBjb250cm9sbGVyICBcclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG5cclxuICAgIGNvbnN0IEJBU0VfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7ICAgICBcclxuXHJcbiAgICAvLyBNb25nb0RCIGNvbm5lY3Rpb24gKyBFcnJvciBIYW5kZWxcclxuICAgIGNvbm5lY3RNb25nbygpLmNhdGNoKCgpID0+XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ0Vycm9yIGluIHRoZSBDb25uZWN0aW9uJyB9KVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyB0eXBlIG9mIHJlcXVlc3QgPT0+IFsnR0VUJywgJ1BPU1QnLCAnUFVUJywgJ0RFTEVURSddXHJcbiAgICBjb25zdCB7IG1ldGhvZCB9ID0gcmVxOyBcclxuXHJcbiAgICBzd2l0Y2ggKG1ldGhvZCkge1xyXG4gICAgICAgIGNhc2UgJ0dFVCc6XHJcblxyXG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMKEJBU0VfVVJMICsgcmVxLnVybCkuc2VhcmNoUGFyYW1zO1xyXG4gICAgICAgICAgICBjb25zdCB0eXBlID0gcGFyYW1zLmdldCgndHlwZScpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHR5cGUgPT09IFwiZ2V0XCIpIHtcclxuICAgICAgICAgICAgICAgZ2V0VXNlcnMocmVxLCByZXMgLCBwYXJhbXMuZ2V0KCdrZXknKSAsICBwYXJhbXMuZ2V0KCdxdWVyeScpICwgcGFyYW1zLmdldCgnYnknKSAsIHBhcmFtcy5nZXQoJ2xpbWl0JykgICwgcGFyYW1zLmdldCgnc2tpcCcpKVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwiY291bnRcIikge1xyXG4gICAgICAgICAgICAgICBnZXRDb3VudChyZXEsIHJlcyAsIHBhcmFtcy5nZXQoJ2tleScpICAsICBwYXJhbXMuZ2V0KCdxdWVyeScpLCBwYXJhbXMuZ2V0KCdieScpKVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdQT1NUJzpcclxuICAgICAgICAgICAgcG9zdFVzZXIocmVxLCByZXMpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdQVVQnOlxyXG4gICAgICAgICAgICB1cGRhdGVVc2VyKHJlcSwgcmVzKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnREVMRVRFJzpcclxuICAgICAgICAgICAgZGVsZXRlVXNlcihyZXEsIHJlcyk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydHRVQnLCAnUE9TVCcsICdQVVQnLCAnREVMRVRFJ10pO1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNSkuZW5kKGBNZXRob2QgJHttZXRob2R9IE5vdCBBbGxvd2VkYCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbImRlbGV0ZVVzZXIiLCJnZXRVc2VycyIsInBvc3RVc2VyIiwidXBkYXRlVXNlciIsImdldENvdW50IiwiY29ubmVjdE1vbmdvIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIkJBU0VfVVJMIiwiY2F0Y2giLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXRob2QiLCJwYXJhbXMiLCJVUkwiLCJ1cmwiLCJzZWFyY2hQYXJhbXMiLCJ0eXBlIiwiZ2V0Iiwic2V0SGVhZGVyIiwiZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/users/index.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/users/index.js"));
module.exports = __webpack_exports__;

})();